{
    "name": "sulu/sulu-demo",
    "license": "proprietary",
    "type": "project",
    "description": "Sulu demo website",
    "keywords": ["symfony", "sulu", "cms", "application", "admin"],
    "require": {
        "php": "^7.4 || ^8.0",
        "ext-ctype": "*",
        "ext-iconv": "*",
        "dantleech/phpcr-migrations-bundle": "^1.2",
        "doctrine/doctrine-bundle": "^2.0",
        "doctrine/doctrine-fixtures-bundle": "^3.0",
        "elasticsearch/elasticsearch": "7.13.*",
        "friendsofsymfony/http-cache-bundle": "^2.8",
        "handcraftedinthealps/elasticsearch-bundle": "^5.2.6.8",
        "handcraftedinthealps/zendsearch": "^2.0",
        "jackalope/jackalope-doctrine-dbal": "^1.3",
        "jackalope/jackalope-jackrabbit": "^1.2",
        "league/flysystem": "^1.0",
        "league/flysystem-aws-s3-v3": "^1.0",
        "php-ffmpeg/php-ffmpeg": "^0.17.0",
        "predis/predis": "^1.1",
<<<<<<< HEAD
        "sentry/sentry-symfony": "^3.0",
        "sulu/article-bundle": "^2.1",
        "sulu/form-bundle": "^2.1",
        "sulu/headless-bundle": "^0.6.0",
        "sulu/sulu": "~2.2.5",
        "sulu/web-twig": "^2.1",
=======
        "sentry/sentry-symfony": "^4.0",
        "sulu/article-bundle": "^2.3",
        "sulu/automation-bundle": "^2.0",
        "sulu/redirect-bundle": "^2.0",
        "sulu/sulu": "~2.3.1",
        "sulu/web-twig": "^2.4",
>>>>>>> 38b3cecf8efa919aa38f92c9a243d3fe75a6bf69
        "symfony/config": "^5.1",
        "symfony/dotenv": "^5.1",
        "symfony/flex": "^1.2",
        "symfony/framework-bundle": "^5.1",
        "symfony/monolog-bridge": "^5.1",
        "symfony/monolog-bundle": "^3.7",
        "symfony/security-bundle": "^5.1",
        "symfony/swiftmailer-bundle": "^3.4",
        "symfony/twig-bundle": "^5.1"
    },
    "conflict": {
        "doctrine/dbal": "2.7.0",
        "doctrine/lexer": "1.0.0",
        "doctrine/doctrine-bundle": "2.3.0",
        "doctrine/doctrine-cache-bundle": "<1.3.1",
        "jackalope/jackalope": "< 1.3.4",
        "jackalope/jackalope-doctrine-dbal": "< 1.3.0",
        "jackalope/jackalope-jackrabbit": "< 1.3.0",
        "jms/serializer-bundle": "3.9.0",
        "php-http/discovery": "< 1.8.0",
        "phpcr/phpcr-utils": "1.2.0 - 1.2.10 || 1.3.0 - 1.3.2",
        "phpdocumentor/reflection-docblock": "5.0.0",
        "phpstan/phpstan": "0.12.26",
        "rokka/imagine-vips": "<0.9.2",
        "symfony/doctrine-bridge": "< 3.4.0",
        "symfony/http-foundation": "4.3.4"
    },
    "require-dev": {
        "friendsofphp/php-cs-fixer": "^2.15",
        "jangregor/phpstan-prophecy": "^0.8",
        "phpcr/phpcr-shell": "^1.2",
        "phpstan/phpstan": "^0.12",
        "phpstan/phpstan-doctrine": "^0.12",
        "phpstan/phpstan-phpunit": "^0.12",
        "phpstan/phpstan-symfony": "^0.12",
        "phpstan/phpstan-webmozart-assert": "^0.12",
        "symfony/browser-kit": "^5.1",
        "symfony/debug-bundle": "^5.1",
        "symfony/error-handler": "^5.1",
        "symfony/phpunit-bridge": "^5.1",
        "symfony/thanks": "^1.1",
        "symfony/web-profiler-bundle": "^5.1",
        "thecodingmachine/phpstan-strict-rules": "^0.12"
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        },
        "exclude-from-classmap": [
            "/src/DataFixtures/Document/",
            "/src/Migrations/"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Tests\\": "tests/"
        }
    },
    "replace": {
        "paragonie/random_compat": "2.*",
        "symfony/polyfill-ctype": "*",
        "symfony/polyfill-iconv": "*",
        "symfony/polyfill-php74": "*",
        "symfony/polyfill-php73": "*",
        "symfony/polyfill-php72": "*",
        "symfony/polyfill-php71": "*",
        "symfony/polyfill-php70": "*",
        "symfony/polyfill-php56": "*"
    },
    "scripts": {
        "auto-scripts": {
            "cache:clear": "symfony-cmd",
            "assets:install %PUBLIC_DIR%": "symfony-cmd",
            "bin/websiteconsole cache:clear": "php-script",
            "bin/adminconsole sulu:media:init": "php-script",
            "bin/adminconsole massive:search:init": "php-script"
        },
        "post-install-cmd": [
            "@auto-scripts"
        ],
        "post-update-cmd": [
            "@auto-scripts"
        ],
        "post-root-package-install": [
            "@php -r \"file_put_contents('.env.local', 'APP_ENV=dev' . PHP_EOL);\"",
            "@php -r \"file_put_contents('.env', str_replace('APP_SECRET=', 'APP_SECRET=' . bin2hex(random_bytes(16)), file_get_contents('.env')));\""
        ],
        "post-create-project-cmd": [
            "@php -r \"file_put_contents('.gitignore', str_replace(['composer.lock' . PHP_EOL, 'symfony.lock' . PHP_EOL, 'package-lock.json' . PHP_EOL], ['', '', ''], file_get_contents('.gitignore')));\""
        ],
        "bootstrap-test-environment": [
            "bin/adminconsole doctrine:database:drop --if-exists --force --env test",
            "bin/adminconsole doctrine:database:create --env test",
            "bin/adminconsole doctrine:schema:update --force --env test"
        ],
        "lint": [
            "@phpstan",
            "@php-cs",
            "@lint-twig",
            "@lint-yaml",
            "@lint-container",
            "@lint-composer",
            "@lint-doctrine"
        ],
        "test": [
            "@phpunit"
        ],
        "security-check": "symfony security:check",
        "phpunit": "bin/phpunit",
        "phpstan": [
            "bin/websiteconsole cache:warmup --env=dev",
            "@test install",
            "vendor/bin/phpstan analyze"
        ],
        "php-cs": "vendor/bin/php-cs-fixer fix --verbose --diff --dry-run",
        "php-cs-fix": "vendor/bin/php-cs-fixer fix",
        "lint-composer": "@composer validate --strict",
        "lint-twig": "bin/websiteconsole lint:twig templates/",
        "lint-yaml": "bin/websiteconsole lint:yaml config/",
        "lint-container": [
            "bin/adminconsole lint:container --env dev",
            "bin/websiteconsole lint:container --env dev",
            "bin/adminconsole lint:container --env test",
            "bin/websiteconsole lint:container --env test",
            "bin/adminconsole lint:container --env stage",
            "bin/websiteconsole lint:container --env stage",
            "bin/adminconsole lint:container --env prod",
            "bin/websiteconsole lint:container --env prod"
        ],
        "lint-doctrine": [
            "bin/adminconsole doctrine:schema:validate --skip-sync",
            "bin/adminconsole doctrine:ensure-production-settings --env prod"
        ]
    },
    "config": {
        "preferred-install": {
            "*": "dist"
        },
        "platform": {
            "php": "8.0.3"
        },
        "sort-packages": true
    },
    "extra": {
        "symfony": {
            "allow-contrib": true
        }
    }
}

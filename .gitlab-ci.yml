variables:
    APP_ENV: test
    APP_SECRET: a448d1dfcaa563fce56c2fd9981f662b
    MAILER_URL: null://localhost
    DATABASE_URL: "mysql://root:root@mysql:3306/su_sulu"
    ELASTICSEARCH_HOST: elasticsearch:9200
    EMAIL_FROM_ADDRESS: admin@localhost
    COMPOSER_PROCESS_TIMEOUT: "1200" # int is not supported by local gitlab-runner
    MYSQL_ROOT_PASSWORD: root

stages:
    - trigger
    - install
    - test

prepare-deployemnt:
    stage: trigger
    image: curlimages/curl:latest
    script:
        # trigger pipeline of deployment project: https://docs.gitlab.com/ee/ci/triggers/README.html#ci-job-token
        - curl --request POST --form "token=$CI_JOB_TOKEN" --form "ref=master" "$CI_API_V4_URL/projects/46/trigger/pipeline"
    only:
        - master

composer:
    stage: install
    image: composer:latest
    before_script:
        - composer config -g cache-dir "$(pwd)/.composer-cache"
    script:
        - composer install --no-interaction --prefer-dist --no-scripts
        - composer test install
        - curl --show-error --silent https://getcomposer.org/installer | php
    artifacts:
        name: composer-dependencies
        expire_in: 8 hours
        paths:
            - vendor
            - bin/.phpunit
            - composer.phar
    cache:
        key: composer
        paths:
            - .composer-cache/

lint:
    stage: test
    image: sulu/php:8.0-cli
    services:
        - mysql:5.7
    before_script:
        - php bin/adminconsole doctrine:database:create --if-not-exists
        - php bin/adminconsole doctrine:schema:update --force
    script:
        - php composer.phar lint

test:
    stage: test
    image: sulu/php:8.0-cli
    services:
        - mysql:5.7
    before_script:
        - php composer.phar bootstrap-test-environment
    script:
        - php composer.phar test

build:
    stage: test
    tags:
        - medium
    image: sulu/php:8.0-cli
    services:
        - mysql:5.7
        - name: elasticsearch:7.13.2
          command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
    script:
        - php bin/console sulu:build dev --destroy

js-css-website:
    stage: test
    image: node:12
    dependencies: []
    variables:
        NODE_OPTIONS: --max-old-space-size=1536
    before_script:
        - npm config set cache "$(pwd)/.npm-cache"
    script:
        - cd assets/website
        - npm install --ignore-optional
        - npm run lint
        - npm run build
    cache:
        key: npm
        paths:
            - .npm-cache/

security-check:
    stage: test
    image: sulu/php:8.0-cli
    before_script:
        - curl -sS https://get.symfony.com/cli/installer | bash
        - mv /root/.symfony/bin/symfony /usr/local/bin/symfony
    script:
        - php composer.phar security-check
    allow_failure: true
